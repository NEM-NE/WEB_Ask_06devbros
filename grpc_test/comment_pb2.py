# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: comment.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='comment.proto',
  package='comment',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\rcomment.proto\x12\x07\x63omment\"\'\n\x0e\x43ommentRequest\x12\x15\n\rclientComment\x18\x01 \x01(\t\"#\n\x0b\x43\x65nsorReply\x12\x14\n\x0cserverCensor\x18\x01 \x01(\x08\x32K\n\x07\x43omment\x12@\n\rCensorComment\x12\x17.comment.CommentRequest\x1a\x14.comment.CensorReply\"\x00\x62\x06proto3'
)




_COMMENTREQUEST = _descriptor.Descriptor(
  name='CommentRequest',
  full_name='comment.CommentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='clientComment', full_name='comment.CommentRequest.clientComment', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=65,
)


_CENSORREPLY = _descriptor.Descriptor(
  name='CensorReply',
  full_name='comment.CensorReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='serverCensor', full_name='comment.CensorReply.serverCensor', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=102,
)

DESCRIPTOR.message_types_by_name['CommentRequest'] = _COMMENTREQUEST
DESCRIPTOR.message_types_by_name['CensorReply'] = _CENSORREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommentRequest = _reflection.GeneratedProtocolMessageType('CommentRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMENTREQUEST,
  '__module__' : 'comment_pb2'
  # @@protoc_insertion_point(class_scope:comment.CommentRequest)
  })
_sym_db.RegisterMessage(CommentRequest)

CensorReply = _reflection.GeneratedProtocolMessageType('CensorReply', (_message.Message,), {
  'DESCRIPTOR' : _CENSORREPLY,
  '__module__' : 'comment_pb2'
  # @@protoc_insertion_point(class_scope:comment.CensorReply)
  })
_sym_db.RegisterMessage(CensorReply)



_COMMENT = _descriptor.ServiceDescriptor(
  name='Comment',
  full_name='comment.Comment',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=104,
  serialized_end=179,
  methods=[
  _descriptor.MethodDescriptor(
    name='CensorComment',
    full_name='comment.Comment.CensorComment',
    index=0,
    containing_service=None,
    input_type=_COMMENTREQUEST,
    output_type=_CENSORREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMMENT)

DESCRIPTOR.services_by_name['Comment'] = _COMMENT

# @@protoc_insertion_point(module_scope)
